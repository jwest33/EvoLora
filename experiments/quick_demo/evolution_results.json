{
  "total_generations": 5,
  "best_score": 0.4,
  "history": [
    {
      "generation": 1,
      "metrics": {
        "loss": -0.00018523260951042175,
        "policy_loss": -0.00018523260951042175,
        "kl_loss": 0,
        "eval_score": 0.4,
        "task_quality": 0.75,
        "train_time": 2781.5736408233643,
        "num_train_tasks": 8,
        "num_eval_tasks": 2
      },
      "timestamp": "2025-09-16T22:07:48.308380"
    },
    {
      "generation": 2,
      "metrics": {
        "loss": -0.0001225937157869339,
        "policy_loss": -0.0001225937157869339,
        "kl_loss": 0,
        "eval_score": 0.4,
        "task_quality": 0.75,
        "train_time": 458.3464984893799,
        "num_train_tasks": 8,
        "num_eval_tasks": 2
      },
      "timestamp": "2025-09-16T22:32:39.703856"
    },
    {
      "generation": 3,
      "metrics": {
        "loss": 0.00040582529618404806,
        "policy_loss": 0.00040582529618404806,
        "kl_loss": 0,
        "eval_score": 0.4,
        "task_quality": 0.75,
        "train_time": 461.99467420578003,
        "num_train_tasks": 8,
        "num_eval_tasks": 2
      },
      "timestamp": "2025-09-16T22:57:46.930567"
    },
    {
      "generation": 4,
      "metrics": {
        "loss": -0.0009647440165281296,
        "policy_loss": -0.0009647440165281296,
        "kl_loss": 0,
        "eval_score": 0.4,
        "task_quality": 0.75,
        "train_time": 462.8685164451599,
        "num_train_tasks": 8,
        "num_eval_tasks": 2
      },
      "timestamp": "2025-09-16T23:22:55.677602"
    },
    {
      "generation": 5,
      "metrics": {
        "loss": -0.0006257137283682823,
        "policy_loss": -0.0006257137283682823,
        "kl_loss": 0,
        "eval_score": 0.4,
        "task_quality": 0.75,
        "train_time": 464.6611235141754,
        "num_train_tasks": 8,
        "num_eval_tasks": 2
      },
      "timestamp": "2025-09-16T23:48:11.094330"
    }
  ],
  "config": {
    "challenger": {
      "cpu_moe_layers": 20,
      "executable": "C:\\Users\\Jake\\llama.cpp\\build\\bin\\Release\\llama-server.exe",
      "gpu_layers": 20,
      "model_path": "C:\\models\\Qwen3-30B-A3B-Instruct-2507\\Qwen3-30B-A3B-Instruct-2507-Q8_0.gguf",
      "port": 8080,
      "type": "llama_cpp",
      "use_direct": true
    },
    "evolution": {
      "bootstrap_size": 10,
      "dataset_size_per_gen": 10,
      "eval_ratio": 0.2,
      "generations": 5,
      "population_size": 10
    },
    "output_dir": "experiments/quick_demo",
    "solver": {
      "device": "cuda",
      "lora_config": {
        "alpha": 32,
        "dropout": 0.1,
        "rank": 16,
        "target_modules": [
          "q_proj",
          "v_proj",
          "k_proj",
          "o_proj"
        ]
      },
      "model_name": "Qwen/Qwen3-4B-Instruct-2507",
      "quantization": {
        "enabled": true,
        "load_in_4bit": false,
        "load_in_8bit": true
      },
      "type": "transformers"
    },
    "task": {
      "curriculum": {
        "initial_difficulty": 0.3,
        "target_success_rate": 0.7
      },
      "difficulty_progression": "adaptive",
      "templates": {
        "code_documentation": "Generate a complex Python function that requires detailed documentation.\nDifficulty level: {difficulty:.1f}\n\nThe function should:\n- Have clear purpose but complex implementation\n- Include edge cases and error handling\n- Use type hints and advanced Python features\n- {difficulty_hints}\n\nOutput only the function code:\n```python\n"
      },
      "type": "code_documentation"
    },
    "training": {
      "batch_size": 8,
      "clip_ratio": 0.2,
      "kl_penalty": 0.1,
      "learning_rate": "1e-5",
      "max_grad_norm": 1.0,
      "num_rollouts": 4
    }
  },
  "timestamp": "2025-09-16T23:48:11.094341"
}